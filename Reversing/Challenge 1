I looked at what kind of a file it was and found out it was an ELF file.
Did quite a bit of reasearch and tried doing the strings command for any starting point.
Found out a secret_keep .. something and a Wrong flag text with it.
Then there was a usage: ./crackme FLAG
Then i gave the file execution permissions using chmod and ran it with ./tryme
It returned the same usage prompt.
Then i tried using the secret_key as flag but it was wrong as well.
Then i used ghidra used to reverse engineering binaries to look at the internal components.
I found the main function with the help of ghidra and after doing a lot of work i was able to
decode the logic behind the code.
Then after reversing the xoring i was able to find the flag
And after using the ./tryme flag{_y0u_f0und_key_} it returned the desired output.
The code snippet, code used to reverse and the rest are included in the resources folder.
But due to some problem or something the code to reverse showed the flag as flag{_y0u_f0und_key_y
Anyone with a straight mind can solve that because the end should be a } and the flag should not exclude
21 characters as per the code.
